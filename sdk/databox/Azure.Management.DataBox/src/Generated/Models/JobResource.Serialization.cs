// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Management.DataBox.Models
{
    public partial class JobResource : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Name != null)
            {
                writer.WritePropertyName("name");
                writer.WriteStringValue(Name);
            }
            if (Id != null)
            {
                writer.WritePropertyName("id");
                writer.WriteStringValue(Id);
            }
            if (Type != null)
            {
                writer.WritePropertyName("type");
                writer.WriteStringValue(Type);
            }
            writer.WritePropertyName("location");
            writer.WriteStringValue(Location);
            if (Tags != null)
            {
                writer.WritePropertyName("tags");
                writer.WriteStartObject();
                foreach (var item in Tags)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteStringValue(item.Value);
                }
                writer.WriteEndObject();
            }
            writer.WritePropertyName("sku");
            writer.WriteObjectValue(Sku);
            if (Identity != null)
            {
                writer.WritePropertyName("identity");
                writer.WriteObjectValue(Identity);
            }
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            writer.WritePropertyName("transferType");
            writer.WriteStringValue(TransferType.ToSerialString());
            if (IsCancellable != null)
            {
                writer.WritePropertyName("isCancellable");
                writer.WriteBooleanValue(IsCancellable.Value);
            }
            if (IsDeletable != null)
            {
                writer.WritePropertyName("isDeletable");
                writer.WriteBooleanValue(IsDeletable.Value);
            }
            if (IsShippingAddressEditable != null)
            {
                writer.WritePropertyName("isShippingAddressEditable");
                writer.WriteBooleanValue(IsShippingAddressEditable.Value);
            }
            if (IsPrepareToShipEnabled != null)
            {
                writer.WritePropertyName("isPrepareToShipEnabled");
                writer.WriteBooleanValue(IsPrepareToShipEnabled.Value);
            }
            if (Status != null)
            {
                writer.WritePropertyName("status");
                writer.WriteStringValue(Status.Value.ToSerialString());
            }
            if (StartTime != null)
            {
                writer.WritePropertyName("startTime");
                writer.WriteStringValue(StartTime.Value, "O");
            }
            if (Error != null)
            {
                writer.WritePropertyName("error");
                writer.WriteObjectValue(Error);
            }
            if (Details != null)
            {
                writer.WritePropertyName("details");
                writer.WriteObjectValue(Details);
            }
            if (CancellationReason != null)
            {
                writer.WritePropertyName("cancellationReason");
                writer.WriteStringValue(CancellationReason);
            }
            if (DeliveryType != null)
            {
                writer.WritePropertyName("deliveryType");
                writer.WriteStringValue(DeliveryType.Value.ToSerialString());
            }
            if (DeliveryInfo != null)
            {
                writer.WritePropertyName("deliveryInfo");
                writer.WriteObjectValue(DeliveryInfo);
            }
            if (IsCancellableWithoutFee != null)
            {
                writer.WritePropertyName("isCancellableWithoutFee");
                writer.WriteBooleanValue(IsCancellableWithoutFee.Value);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static JobResource DeserializeJobResource(JsonElement element)
        {
            string name = default;
            string id = default;
            string type = default;
            string location = default;
            IDictionary<string, string> tags = default;
            Sku sku = default;
            ResourceIdentity identity = default;
            TransferType transferType = default;
            bool? isCancellable = default;
            bool? isDeletable = default;
            bool? isShippingAddressEditable = default;
            bool? isPrepareToShipEnabled = default;
            StageName? status = default;
            DateTimeOffset? startTime = default;
            CloudError error = default;
            JobDetails details = default;
            string cancellationReason = default;
            JobDeliveryType? deliveryType = default;
            JobDeliveryInfo deliveryInfo = default;
            bool? isCancellableWithoutFee = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    id = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("location"))
                {
                    location = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tags"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    Dictionary<string, string> dictionary = new Dictionary<string, string>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.Value.ValueKind == JsonValueKind.Null)
                        {
                            dictionary.Add(property0.Name, null);
                        }
                        else
                        {
                            dictionary.Add(property0.Name, property0.Value.GetString());
                        }
                    }
                    tags = dictionary;
                    continue;
                }
                if (property.NameEquals("sku"))
                {
                    sku = Sku.DeserializeSku(property.Value);
                    continue;
                }
                if (property.NameEquals("identity"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    identity = ResourceIdentity.DeserializeResourceIdentity(property.Value);
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("transferType"))
                        {
                            transferType = property0.Value.GetString().ToTransferType();
                            continue;
                        }
                        if (property0.NameEquals("isCancellable"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            isCancellable = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("isDeletable"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            isDeletable = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("isShippingAddressEditable"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            isShippingAddressEditable = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("isPrepareToShipEnabled"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            isPrepareToShipEnabled = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("status"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            status = property0.Value.GetString().ToStageName();
                            continue;
                        }
                        if (property0.NameEquals("startTime"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            startTime = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("error"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            error = CloudError.DeserializeCloudError(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("details"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            details = JobDetails.DeserializeJobDetails(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("cancellationReason"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            cancellationReason = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("deliveryType"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            deliveryType = property0.Value.GetString().ToJobDeliveryType();
                            continue;
                        }
                        if (property0.NameEquals("deliveryInfo"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            deliveryInfo = JobDeliveryInfo.DeserializeJobDeliveryInfo(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("isCancellableWithoutFee"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            isCancellableWithoutFee = property0.Value.GetBoolean();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new JobResource(location, tags, sku, identity, name, id, type, transferType, isCancellable, isDeletable, isShippingAddressEditable, isPrepareToShipEnabled, status, startTime, error, details, cancellationReason, deliveryType, deliveryInfo, isCancellableWithoutFee);
        }
    }
}
