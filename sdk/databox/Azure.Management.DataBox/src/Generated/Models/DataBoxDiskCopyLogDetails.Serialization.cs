// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Management.DataBox.Models
{
    public partial class DataBoxDiskCopyLogDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (DiskSerialNumber != null)
            {
                writer.WritePropertyName("diskSerialNumber");
                writer.WriteStringValue(DiskSerialNumber);
            }
            if (ErrorLogLink != null)
            {
                writer.WritePropertyName("errorLogLink");
                writer.WriteStringValue(ErrorLogLink);
            }
            if (VerboseLogLink != null)
            {
                writer.WritePropertyName("verboseLogLink");
                writer.WriteStringValue(VerboseLogLink);
            }
            writer.WritePropertyName("copyLogDetailsType");
            writer.WriteStringValue(CopyLogDetailsType.ToString());
            writer.WriteEndObject();
        }

        internal static DataBoxDiskCopyLogDetails DeserializeDataBoxDiskCopyLogDetails(JsonElement element)
        {
            string diskSerialNumber = default;
            string errorLogLink = default;
            string verboseLogLink = default;
            ClassDiscriminator copyLogDetailsType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("diskSerialNumber"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    diskSerialNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("errorLogLink"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    errorLogLink = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("verboseLogLink"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    verboseLogLink = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("copyLogDetailsType"))
                {
                    copyLogDetailsType = new ClassDiscriminator(property.Value.GetString());
                    continue;
                }
            }
            return new DataBoxDiskCopyLogDetails(copyLogDetailsType, diskSerialNumber, errorLogLink, verboseLogLink);
        }
    }
}
