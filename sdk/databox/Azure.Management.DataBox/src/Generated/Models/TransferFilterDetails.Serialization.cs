// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Management.DataBox.Models
{
    public partial class TransferFilterDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("dataAccountType");
            writer.WriteStringValue(DataAccountType);
            if (BlobFilterDetails != null)
            {
                writer.WritePropertyName("blobFilterDetails");
                writer.WriteObjectValue(BlobFilterDetails);
            }
            if (AzureFileFilterDetails != null)
            {
                writer.WritePropertyName("azureFileFilterDetails");
                writer.WriteObjectValue(AzureFileFilterDetails);
            }
            if (FilterFileDetails != null)
            {
                writer.WritePropertyName("filterFileDetails");
                writer.WriteStartArray();
                foreach (var item in FilterFileDetails)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static TransferFilterDetails DeserializeTransferFilterDetails(JsonElement element)
        {
            string dataAccountType = default;
            BlobFilterDetails blobFilterDetails = default;
            AzureFileFilterDetails azureFileFilterDetails = default;
            IList<FilterFileDetails> filterFileDetails = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("dataAccountType"))
                {
                    dataAccountType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("blobFilterDetails"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    blobFilterDetails = BlobFilterDetails.DeserializeBlobFilterDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("azureFileFilterDetails"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    azureFileFilterDetails = AzureFileFilterDetails.DeserializeAzureFileFilterDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("filterFileDetails"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<FilterFileDetails> array = new List<FilterFileDetails>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(Models.FilterFileDetails.DeserializeFilterFileDetails(item));
                        }
                    }
                    filterFileDetails = array;
                    continue;
                }
            }
            return new TransferFilterDetails(dataAccountType, blobFilterDetails, azureFileFilterDetails, filterFileDetails);
        }
    }
}
