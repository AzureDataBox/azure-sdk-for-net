// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Management.DataBox.Models
{
    public partial class BlobFilterDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (BlobPrefixList != null)
            {
                writer.WritePropertyName("blobPrefixList");
                writer.WriteStartArray();
                foreach (var item in BlobPrefixList)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (BlobPathList != null)
            {
                writer.WritePropertyName("blobPathList");
                writer.WriteStartArray();
                foreach (var item in BlobPathList)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (ContainerList != null)
            {
                writer.WritePropertyName("containerList");
                writer.WriteStartArray();
                foreach (var item in ContainerList)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static BlobFilterDetails DeserializeBlobFilterDetails(JsonElement element)
        {
            IList<string> blobPrefixList = default;
            IList<string> blobPathList = default;
            IList<string> containerList = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("blobPrefixList"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(item.GetString());
                        }
                    }
                    blobPrefixList = array;
                    continue;
                }
                if (property.NameEquals("blobPathList"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(item.GetString());
                        }
                    }
                    blobPathList = array;
                    continue;
                }
                if (property.NameEquals("containerList"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(item.GetString());
                        }
                    }
                    containerList = array;
                    continue;
                }
            }
            return new BlobFilterDetails(blobPrefixList, blobPathList, containerList);
        }
    }
}
