// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Management.DataBox.Models
{
    public partial class ShippingAddress : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("streetAddress1");
            writer.WriteStringValue(StreetAddress1);
            if (StreetAddress2 != null)
            {
                writer.WritePropertyName("streetAddress2");
                writer.WriteStringValue(StreetAddress2);
            }
            if (StreetAddress3 != null)
            {
                writer.WritePropertyName("streetAddress3");
                writer.WriteStringValue(StreetAddress3);
            }
            if (City != null)
            {
                writer.WritePropertyName("city");
                writer.WriteStringValue(City);
            }
            if (StateOrProvince != null)
            {
                writer.WritePropertyName("stateOrProvince");
                writer.WriteStringValue(StateOrProvince);
            }
            writer.WritePropertyName("country");
            writer.WriteStringValue(Country);
            writer.WritePropertyName("postalCode");
            writer.WriteStringValue(PostalCode);
            if (ZipExtendedCode != null)
            {
                writer.WritePropertyName("zipExtendedCode");
                writer.WriteStringValue(ZipExtendedCode);
            }
            if (CompanyName != null)
            {
                writer.WritePropertyName("companyName");
                writer.WriteStringValue(CompanyName);
            }
            if (AddressType != null)
            {
                writer.WritePropertyName("addressType");
                writer.WriteStringValue(AddressType.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static ShippingAddress DeserializeShippingAddress(JsonElement element)
        {
            string streetAddress1 = default;
            string streetAddress2 = default;
            string streetAddress3 = default;
            string city = default;
            string stateOrProvince = default;
            string country = default;
            string postalCode = default;
            string zipExtendedCode = default;
            string companyName = default;
            AddressType? addressType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("streetAddress1"))
                {
                    streetAddress1 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("streetAddress2"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    streetAddress2 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("streetAddress3"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    streetAddress3 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("city"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    city = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("stateOrProvince"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    stateOrProvince = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("country"))
                {
                    country = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("postalCode"))
                {
                    postalCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("zipExtendedCode"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    zipExtendedCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("companyName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    companyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("addressType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    addressType = new AddressType(property.Value.GetString());
                    continue;
                }
            }
            return new ShippingAddress(streetAddress1, streetAddress2, streetAddress3, city, stateOrProvince, country, postalCode, zipExtendedCode, companyName, addressType);
        }
    }
}
