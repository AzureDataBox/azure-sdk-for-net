// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Management.DataBox.Models
{
    public partial class AddressValidationOutput
    {
        internal static AddressValidationOutput DeserializeAddressValidationOutput(JsonElement element)
        {
            ValidationType? validationType = default;
            CloudError error = default;
            AddressValidationStatus? validationStatus = default;
            IReadOnlyList<ShippingAddress> alternateAddresses = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("properties"))
                {
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("validationType"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            validationType = new ValidationType(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("error"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            error = CloudError.DeserializeCloudError(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("validationStatus"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            validationStatus = property0.Value.GetString().ToAddressValidationStatus();
                            continue;
                        }
                        if (property0.NameEquals("alternateAddresses"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                continue;
                            }
                            List<ShippingAddress> array = new List<ShippingAddress>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                if (item.ValueKind == JsonValueKind.Null)
                                {
                                    array.Add(null);
                                }
                                else
                                {
                                    array.Add(ShippingAddress.DeserializeShippingAddress(item));
                                }
                            }
                            alternateAddresses = array;
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new AddressValidationOutput(validationType, error, validationStatus, alternateAddresses);
        }
    }
}
