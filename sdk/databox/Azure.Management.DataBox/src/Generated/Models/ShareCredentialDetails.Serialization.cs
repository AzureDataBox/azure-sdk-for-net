// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Management.DataBox.Models
{
    public partial class ShareCredentialDetails
    {
        internal static ShareCredentialDetails DeserializeShareCredentialDetails(JsonElement element)
        {
            string shareName = default;
            ShareDestinationFormatType? shareType = default;
            string userName = default;
            string password = default;
            IReadOnlyList<AccessProtocol> supportedAccessProtocols = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("shareName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    shareName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("shareType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    shareType = new ShareDestinationFormatType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("userName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    userName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("password"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    password = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("supportedAccessProtocols"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<AccessProtocol> array = new List<AccessProtocol>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(new AccessProtocol(item.GetString()));
                    }
                    supportedAccessProtocols = array;
                    continue;
                }
            }
            return new ShareCredentialDetails(shareName, shareType, userName, password, supportedAccessProtocols);
        }
    }
}
