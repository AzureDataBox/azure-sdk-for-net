// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Management.DataBox.Models
{
    public partial class TransferConfiguration : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("transferConfigurationType");
            writer.WriteStringValue(TransferConfigurationType.ToSerialString());
            if (TransferFilterDetails != null)
            {
                writer.WritePropertyName("transferFilterDetails");
                writer.WriteObjectValue(TransferFilterDetails);
            }
            if (TransferAllDetails != null)
            {
                writer.WritePropertyName("transferAllDetails");
                writer.WriteObjectValue(TransferAllDetails);
            }
            writer.WriteEndObject();
        }

        internal static TransferConfiguration DeserializeTransferConfiguration(JsonElement element)
        {
            TransferConfigurationType transferConfigurationType = default;
            TransferConfigurationTransferFilterDetails transferFilterDetails = default;
            TransferConfigurationTransferAllDetails transferAllDetails = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("transferConfigurationType"))
                {
                    transferConfigurationType = property.Value.GetString().ToTransferConfigurationType();
                    continue;
                }
                if (property.NameEquals("transferFilterDetails"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    transferFilterDetails = TransferConfigurationTransferFilterDetails.DeserializeTransferConfigurationTransferFilterDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("transferAllDetails"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    transferAllDetails = TransferConfigurationTransferAllDetails.DeserializeTransferConfigurationTransferAllDetails(property.Value);
                    continue;
                }
            }
            return new TransferConfiguration(transferConfigurationType, transferFilterDetails, transferAllDetails);
        }
    }
}
