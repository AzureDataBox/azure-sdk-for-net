// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Management.DataBox.Models
{
    public partial class DataBoxHeavySecret
    {
        internal static DataBoxHeavySecret DeserializeDataBoxHeavySecret(JsonElement element)
        {
            string deviceSerialNumber = default;
            string devicePassword = default;
            IReadOnlyList<ApplianceNetworkConfiguration> networkConfigurations = default;
            string encodedValidationCertPubKey = default;
            IReadOnlyList<AccountCredentialDetails> accountCredentialDetails = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("deviceSerialNumber"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    deviceSerialNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("devicePassword"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    devicePassword = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("networkConfigurations"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ApplianceNetworkConfiguration> array = new List<ApplianceNetworkConfiguration>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(ApplianceNetworkConfiguration.DeserializeApplianceNetworkConfiguration(item));
                        }
                    }
                    networkConfigurations = array;
                    continue;
                }
                if (property.NameEquals("encodedValidationCertPubKey"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    encodedValidationCertPubKey = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("accountCredentialDetails"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<AccountCredentialDetails> array = new List<AccountCredentialDetails>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(Models.AccountCredentialDetails.DeserializeAccountCredentialDetails(item));
                        }
                    }
                    accountCredentialDetails = array;
                    continue;
                }
            }
            return new DataBoxHeavySecret(deviceSerialNumber, devicePassword, networkConfigurations, encodedValidationCertPubKey, accountCredentialDetails);
        }
    }
}
