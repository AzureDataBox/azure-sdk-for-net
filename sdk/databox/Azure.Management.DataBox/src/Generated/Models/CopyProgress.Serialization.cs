// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Management.DataBox.Models
{
    public partial class CopyProgress : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (StorageAccountName != null)
            {
                writer.WritePropertyName("storageAccountName");
                writer.WriteStringValue(StorageAccountName);
            }
            if (TransferType != null)
            {
                writer.WritePropertyName("transferType");
                writer.WriteStringValue(TransferType.Value.ToString());
            }
            if (DataAccountType != null)
            {
                writer.WritePropertyName("dataAccountType");
                writer.WriteStringValue(DataAccountType.Value.ToString());
            }
            if (AccountId != null)
            {
                writer.WritePropertyName("accountId");
                writer.WriteStringValue(AccountId);
            }
            if (BytesProcessed != null)
            {
                writer.WritePropertyName("bytesProcessed");
                writer.WriteNumberValue(BytesProcessed.Value);
            }
            if (TotalBytesToProcess != null)
            {
                writer.WritePropertyName("totalBytesToProcess");
                writer.WriteNumberValue(TotalBytesToProcess.Value);
            }
            if (FilesProcessed != null)
            {
                writer.WritePropertyName("filesProcessed");
                writer.WriteNumberValue(FilesProcessed.Value);
            }
            if (TotalFilesToProcess != null)
            {
                writer.WritePropertyName("totalFilesToProcess");
                writer.WriteNumberValue(TotalFilesToProcess.Value);
            }
            if (InvalidFilesProcessed != null)
            {
                writer.WritePropertyName("invalidFilesProcessed");
                writer.WriteNumberValue(InvalidFilesProcessed.Value);
            }
            if (InvalidFileBytesUploaded != null)
            {
                writer.WritePropertyName("invalidFileBytesUploaded");
                writer.WriteNumberValue(InvalidFileBytesUploaded.Value);
            }
            if (RenamedContainerCount != null)
            {
                writer.WritePropertyName("renamedContainerCount");
                writer.WriteNumberValue(RenamedContainerCount.Value);
            }
            if (FilesErroredOut != null)
            {
                writer.WritePropertyName("filesErroredOut");
                writer.WriteNumberValue(FilesErroredOut.Value);
            }
            if (DirectoriesErroredOut != null)
            {
                writer.WritePropertyName("directoriesErroredOut");
                writer.WriteNumberValue(DirectoriesErroredOut.Value);
            }
            if (InvalidDirectoriesProcessed != null)
            {
                writer.WritePropertyName("invalidDirectoriesProcessed");
                writer.WriteNumberValue(InvalidDirectoriesProcessed.Value);
            }
            if (IsEnumerationInProgress != null)
            {
                writer.WritePropertyName("isEnumerationInProgress");
                writer.WriteBooleanValue(IsEnumerationInProgress.Value);
            }
            writer.WriteEndObject();
        }

        internal static CopyProgress DeserializeCopyProgress(JsonElement element)
        {
            string storageAccountName = default;
            TransferType? transferType = default;
            DataAccountType? dataAccountType = default;
            string accountId = default;
            long? bytesProcessed = default;
            long? totalBytesToProcess = default;
            long? filesProcessed = default;
            long? totalFilesToProcess = default;
            long? invalidFilesProcessed = default;
            long? invalidFileBytesUploaded = default;
            long? renamedContainerCount = default;
            long? filesErroredOut = default;
            long? directoriesErroredOut = default;
            long? invalidDirectoriesProcessed = default;
            bool? isEnumerationInProgress = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("storageAccountName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    storageAccountName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("transferType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    transferType = new TransferType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("dataAccountType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    dataAccountType = new DataAccountType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("accountId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    accountId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("bytesProcessed"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    bytesProcessed = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("totalBytesToProcess"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalBytesToProcess = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("filesProcessed"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    filesProcessed = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("totalFilesToProcess"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalFilesToProcess = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("invalidFilesProcessed"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    invalidFilesProcessed = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("invalidFileBytesUploaded"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    invalidFileBytesUploaded = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("renamedContainerCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    renamedContainerCount = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("filesErroredOut"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    filesErroredOut = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("directoriesErroredOut"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    directoriesErroredOut = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("invalidDirectoriesProcessed"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    invalidDirectoriesProcessed = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("isEnumerationInProgress"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    isEnumerationInProgress = property.Value.GetBoolean();
                    continue;
                }
            }
            return new CopyProgress(storageAccountName, transferType, dataAccountType, accountId, bytesProcessed, totalBytesToProcess, filesProcessed, totalFilesToProcess, invalidFilesProcessed, invalidFileBytesUploaded, renamedContainerCount, filesErroredOut, directoriesErroredOut, invalidDirectoriesProcessed, isEnumerationInProgress);
        }
    }
}
