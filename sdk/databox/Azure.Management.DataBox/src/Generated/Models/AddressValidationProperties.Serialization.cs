// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Management.DataBox.Models
{
    public partial class AddressValidationProperties
    {
        internal static AddressValidationProperties DeserializeAddressValidationProperties(JsonElement element)
        {
            AddressValidationStatus? validationStatus = default;
            IReadOnlyList<ShippingAddress> alternateAddresses = default;
            ValidationInputDiscriminator validationType = default;
            CloudError error = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("validationStatus"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    validationStatus = property.Value.GetString().ToAddressValidationStatus();
                    continue;
                }
                if (property.NameEquals("alternateAddresses"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ShippingAddress> array = new List<ShippingAddress>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(ShippingAddress.DeserializeShippingAddress(item));
                        }
                    }
                    alternateAddresses = array;
                    continue;
                }
                if (property.NameEquals("validationType"))
                {
                    validationType = property.Value.GetString().ToValidationInputDiscriminator();
                    continue;
                }
                if (property.NameEquals("error"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    error = CloudError.DeserializeCloudError(property.Value);
                    continue;
                }
            }
            return new AddressValidationProperties(validationType, error, validationStatus, alternateAddresses);
        }
    }
}
