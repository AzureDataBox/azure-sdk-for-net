// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Management.DataBox.Models
{
    internal static class NotificationStageNameExtensions
    {
        public static string ToSerialString(this NotificationStageName value) => value switch
        {
            NotificationStageName.DevicePrepared => "DevicePrepared",
            NotificationStageName.Dispatched => "Dispatched",
            NotificationStageName.Delivered => "Delivered",
            NotificationStageName.PickedUp => "PickedUp",
            NotificationStageName.AtAzureDC => "AtAzureDC",
            NotificationStageName.DataCopy => "DataCopy",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown NotificationStageName value.")
        };

        public static NotificationStageName ToNotificationStageName(this string value)
        {
            if (string.Equals(value, "DevicePrepared", StringComparison.InvariantCultureIgnoreCase)) return NotificationStageName.DevicePrepared;
            if (string.Equals(value, "Dispatched", StringComparison.InvariantCultureIgnoreCase)) return NotificationStageName.Dispatched;
            if (string.Equals(value, "Delivered", StringComparison.InvariantCultureIgnoreCase)) return NotificationStageName.Delivered;
            if (string.Equals(value, "PickedUp", StringComparison.InvariantCultureIgnoreCase)) return NotificationStageName.PickedUp;
            if (string.Equals(value, "AtAzureDC", StringComparison.InvariantCultureIgnoreCase)) return NotificationStageName.AtAzureDC;
            if (string.Equals(value, "DataCopy", StringComparison.InvariantCultureIgnoreCase)) return NotificationStageName.DataCopy;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown NotificationStageName value.");
        }
    }
}
